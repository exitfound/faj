---
name: Molecule Docker Image Builds

on:
  workflow_dispatch:

jobs:
  hadolint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        OS_VERSION: [opensuse15.3, opensuse15.4, opensuse15.5, centos8, centos9, debian10, debian11, debian12, ubuntu20.04, ubuntu22.04, ubuntu24.04]
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Linting dockerfile from list
        uses: hadolint/hadolint-action@v3.1.0
        env:
          DOCKERFILE_PROFILE: ${{ matrix.OS_VERSION }}
        with:
          recursive: true
          dockerfile: ./dockerfiles/${{ env.DOCKERFILE_PROFILE }}.dockerfile
          ignore: "DL3008,DL3013,DL3033,DL3037,DL3041"

  build-suse-image:
    needs: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  build-suse-image-matrix:
    needs: build-suse-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        OS_VERSION: [opensuse15.3, opensuse15.4, opensuse15.5]
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        env:
          OS_VERSION: ${{ matrix.OS_VERSION }}
        with:
          push: true
          context: ./dockerfiles/
          tags: mdd13/ansible-docker-suse:${{ env.OS_VERSION }}
          file: ./dockerfiles/${{ env.OS_VERSION }}.dockerfile

  build-redhat-image:
    needs: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  build-redhat-image-matrix:
    needs: build-redhat-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        OS_VERSION: [centos8, centos9]
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        env:
          OS_VERSION: ${{ matrix.OS_VERSION }}
        with:
          push: true
          context: ./dockerfiles/
          tags: mdd13/ansible-docker-redhat:${{ env.OS_VERSION }}
          file: ./dockerfiles/${{ env.OS_VERSION }}.dockerfile

  build-debian-image:
    needs: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  build-debian-image-matrix:
    needs: build-debian-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        OS_VERSION: [debian10, debian11, debian12]
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        env:
          OS_VERSION: ${{ matrix.OS_VERSION }}
        with:
          push: true
          context: ./dockerfiles/
          tags: mdd13/ansible-docker-debian:${{ env.OS_VERSION }}
          file: ./dockerfiles/${{ env.OS_VERSION }}.dockerfile

  build-ubuntu-image:
    needs: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  build-ubuntu-image-matrix:
    needs: build-ubuntu-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        OS_VERSION: [ubuntu20.04, ubuntu22.04, ubuntu24.04]
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        env:
          OS_VERSION: ${{ matrix.OS_VERSION }}
        with:
          push: true
          context: ./dockerfiles/
          tags: mdd13/ansible-docker-ubuntu:${{ env.OS_VERSION }}
          file: ./dockerfiles/${{ env.OS_VERSION }}.dockerfile
          cache-from: type=registry,ref=mdd13/ansible-docker-ubuntu:${{ env.OS_VERSION }}
          cache-to: type=registry,ref=mdd13/ansible-docker-ubuntu:${{ env.OS_VERSION }},mode=max
